syntax = "proto3";
package protocol;

import "core/Object.proto";
import "core/Contract.proto";
import "google/api/annotations.proto";


option java_package = "io.midasprotocol.api"; //Specify the name of the package that generated the Java file
option java_outer_classname = "GrpcAPI"; //Specify the class name of the generated Java file
option go_package = "mcashscan/app/client/api";


service Wallet {

    rpc GetAccount (Account) returns (Account) {
        option (google.api.http) = {
      post: "/wallet/getaccount"
      body: "*"
      additional_bindings {
        get: "/wallet/getaccount"
      }
    };
    };

    rpc GetAccountById (Account) returns (Account) {
        option (google.api.http) = {
      post: "/wallet/getaccountbyid"
      body: "*"
      additional_bindings {
        get: "/wallet/getaccountbyid"
      }
    };
    };

    rpc CreateTransaction (TransferContract) returns (TransactionExtension) {
    };

    rpc BroadcastTransaction (Transaction) returns (Return) {
        option (google.api.http) = {
      post: "/wallet/broadcasttransaction"
      body: "*"
      additional_bindings {
        get: "/wallet/broadcasttransaction"
      }
    };
    };

    rpc SetAccountId (SetAccountIdContract) returns (Transaction) {
        option (google.api.http) = {
      post: "/wallet/setaccountid"
      body: "*"
      additional_bindings {
        get: "/wallet/setaccountid"
      }
    };
    };

    rpc UpdateAccount (AccountUpdateContract) returns (TransactionExtension) {
    };

    //modify the consume_user_resource_percent
    rpc UpdateSetting (UpdateSettingContract) returns (TransactionExtension) {
    };

    //modify the energy_limit
    rpc UpdateEnergyLimit (UpdateEnergyLimitContract) returns (TransactionExtension) {
    };

    //Use this function instead of VoteWitnessAccount.
    rpc VoteWitnessAccount (VoteWitnessContract) returns (TransactionExtension) {
    };

    rpc CreateAssetIssue (AssetIssueContract) returns (TransactionExtension) {
    };

    rpc UpdateWitness (WitnessUpdateContract) returns (TransactionExtension) {
    };

    rpc CreateAccount (AccountCreateContract) returns (TransactionExtension) {
    };

    rpc CreateWitness (WitnessCreateContract) returns (TransactionExtension) {
    };

    rpc TransferAsset (TransferAssetContract) returns (TransactionExtension) {
    };

    rpc ParticipateAssetIssue (ParticipateAssetIssueContract) returns (TransactionExtension) {
    };

    rpc FreezeBalance (FreezeBalanceContract) returns (TransactionExtension) {
    };

    rpc UnfreezeBalance (UnfreezeBalanceContract) returns (TransactionExtension) {
    };

    rpc UnfreezeAsset (UnfreezeAssetContract) returns (TransactionExtension) {
    };

    rpc WithdrawBalance (WithdrawBalanceContract) returns (TransactionExtension) {
    };

    rpc UpdateAsset (UpdateAssetContract) returns (TransactionExtension) {
    };

    rpc ProposalCreate (ProposalCreateContract) returns (TransactionExtension) {
    };

    rpc ProposalApprove (ProposalApproveContract) returns (TransactionExtension) {
    };

    rpc ProposalDelete (ProposalDeleteContract) returns (TransactionExtension) {
    };

    rpc BuyStorage (BuyStorageContract) returns (TransactionExtension) {
    };

    rpc BuyStorageBytes (BuyStorageBytesContract) returns (TransactionExtension) {
    };

    rpc SellStorage (SellStorageContract) returns (TransactionExtension) {
    };

    rpc ExchangeCreate (ExchangeCreateContract) returns (TransactionExtension) {
    };

    rpc ExchangeInject (ExchangeInjectContract) returns (TransactionExtension) {
    };

    rpc ExchangeWithdraw (ExchangeWithdrawContract) returns (TransactionExtension) {
    };

    rpc ExchangeTransaction (ExchangeTransactionContract) returns (TransactionExtension) {
    };

    rpc ListNodes (EmptyMessage) returns (NodeList) {
        option (google.api.http) = {
      post: "/wallet/listnodes"
      body: "*"
      additional_bindings {
        get: "/wallet/listnodes"
      }
    };
    }

    rpc GetAssetIssueByAccount (Account) returns (AssetIssueList) {
        option (google.api.http) = {
      post: "/wallet/getassetissuebyaccount"
      body: "*"
      additional_bindings {
        get: "/wallet/getassetissuebyaccount"
      }
    };
    }
    rpc GetAccountResource (Account) returns (AccountResourceMessage) {
    };

    rpc GetAssetIssueById (BytesMessage) returns (AssetIssueContract) {
    };

    rpc GetNowBlock (EmptyMessage) returns (BlockExtension) {
    };

    rpc GetBlockByNum (NumberMessage) returns (BlockExtension) {
    };

    rpc GetTransactionCountByBlockNum (NumberMessage) returns (NumberMessage) {
    };

    rpc GetBlockById (BytesMessage) returns (Block) {
        option (google.api.http) = {
      post: "/wallet/getblockbyid"
      body: "*"
      additional_bindings {
        get: "/wallet/getblockbyid"
      }
    };
    }

    rpc GetBlockByLimitNext (BlockLimit) returns (BlockListExtension) {
    };

    rpc GetBlockByLatestNum (NumberMessage) returns (BlockListExtension) {
    };

    rpc GetTransactionById (BytesMessage) returns (Transaction) {
        option (google.api.http) = {
      post: "/wallet/gettransactionbyid"
      body: "*"
      additional_bindings {
        get: "/wallet/gettransactionbyid"
      }
    };
    }

    rpc DeployContract (CreateSmartContract) returns (TransactionExtension) {
    }

    rpc GetContract (BytesMessage) returns (SmartContract) {
    }

    rpc TriggerContract (TriggerSmartContract) returns (TransactionExtension) {
    }

    rpc ListWitnesses (EmptyMessage) returns (WitnessList) {
        option (google.api.http) = {
      post: "/wallet/listwitnesses"
      body: "*"
      additional_bindings {
        get: "/wallet/listwitnesses"
      }
    };
    };


    rpc GetDelegatedResource (DelegatedResourceMessage) returns (DelegatedResourceList) {
    };

    rpc GetDelegatedResourceAccountIndex (BytesMessage) returns (DelegatedResourceAccountIndex) {
    };

    rpc ListProposals (EmptyMessage) returns (ProposalList) {
        option (google.api.http) = {
      post: "/wallet/listproposals"
      body: "*"
      additional_bindings {
        get: "/wallet/listproposals"
      }
    };
    };
    rpc GetPaginatedProposalList (PaginatedMessage) returns (ProposalList) {
        option (google.api.http) = {
          post: "/wallet/getpaginatedproposallist"
          body: "*"
          additional_bindings {
            get: "/wallet/getpaginatedproposallist"
          }
        };
    }
    rpc GetProposalById (BytesMessage) returns (Proposal) {
        option (google.api.http) = {
        post: "/wallet/getproposalbyid"
        body: "*"
        additional_bindings {
          get: "/wallet/getproposalbyid"
        }
      };
    };

    rpc GetBlockReward (NumberMessage) returns (BlockRewardList) {
        option (google.api.http) = {
          post: "/wallet/getreward"
          body: "*"
          additional_bindings {
            get: "/wallet/getreward"
          }
        };
    }

    rpc ListExchanges (EmptyMessage) returns (ExchangeList) {
        option (google.api.http) = {
      post: "/wallet/listexchanges"
      body: "*"
      additional_bindings {
        get: "/wallet/listexchanges"
      }
    };
    };
    rpc GetPaginatedExchangeList (PaginatedMessage) returns (ExchangeList) {
        option (google.api.http) = {
          post: "/wallet/getpaginatedexchangelist"
          body: "*"
          additional_bindings {
            get: "/wallet/getpaginatedexchangelist"
          }
        };
    }
    rpc GetExchangeById (BytesMessage) returns (Exchange) {
        option (google.api.http) = {
        post: "/wallet/getexchangebyid"
        body: "*"
        additional_bindings {
          get: "/wallet/getexchangebyid"
        }
      };
    };

    rpc GetChainParameters (EmptyMessage) returns (ChainParameters) {
        option (google.api.http) = {
         post: "/wallet/getchainparameters"
         body: "*"
         additional_bindings {
           get: "/wallet/getchainparameters"
         }
       };
    };

    rpc GetAssetIssueList (EmptyMessage) returns (AssetIssueList) {
        option (google.api.http) = {
        post: "/wallet/getassetissuelist"
        body: "*"
        additional_bindings {
          get: "/wallet/getassetissuelist"
        }
      };
    }
    rpc GetPaginatedAssetIssueList (PaginatedMessage) returns (AssetIssueList) {
        option (google.api.http) = {
        post: "/wallet/getpaginatedassetissuelist"
        body: "*"
        additional_bindings {
          get: "/wallet/getpaginatedassetissuelist"
        }
      };
    }


    rpc TotalTransaction (EmptyMessage) returns (NumberMessage) {
        option (google.api.http) = {
      post: "/wallet/totaltransaction"
      body: "*"
      additional_bindings {
        get: "/wallet/totaltransaction"
      }
    };
    }
    rpc GetNextMaintenanceTime (EmptyMessage) returns (NumberMessage) {
        option (google.api.http) = {
      post: "/wallet/getnextmaintenancetime"
      body: "*"
      additional_bindings {
        get: "/wallet/getnextmaintenancetime"
      }
    };
    }
    //Warning: do not invoke this interface provided by others.
    rpc GetTransactionSign (TransactionSign) returns (TransactionExtension) {
    };

    //Warning: do not invoke this interface provided by others.
    rpc CreateAddress (BytesMessage) returns (BytesMessage) {
        option (google.api.http) = {
      post: "/wallet/createaddress"
      body: "*"
      additional_bindings {
        get: "/wallet/createaddress"
      }
    };
    };

    //Warning: do not invoke this interface provided by others.
    rpc EasyTransferAsset (EasyTransferAssetMessage) returns (EasyTransferResponse) {
    };

    //Warning: do not invoke this interface provided by others.
    rpc EasyTransferAssetByPrivate (EasyTransferAssetByPrivateMessage) returns (EasyTransferResponse) {
    };

    //Warning: do not invoke this interface provided by others.
    rpc EasyTransfer (EasyTransferMessage) returns (EasyTransferResponse) {
        option (google.api.http) = {
      post: "/wallet/easytransfer"
      body: "*"
      additional_bindings {
        get: "/wallet/easytransfer"
      }
    };
    };

    //Warning: do not invoke this interface provided by others.
    rpc EasyTransferByPrivate (EasyTransferByPrivateMessage) returns (EasyTransferResponse) {
        option (google.api.http) = {
      post: "/wallet/easytransferbyprivate"
      body: "*"
      additional_bindings {
        get: "/wallet/easytransferbyprivate"
      }
    };
    };

    //Warning: do not invoke this interface provided by others.
    rpc GenerateAddress (EmptyMessage) returns (AddressPrKeyPairMessage) {

        option (google.api.http) = {
      post: "/wallet/generateaddress"
      body: "*"
      additional_bindings {
        get: "/wallet/generateaddress"
      }
    };
    }

    rpc GetTransactionInfoById (BytesMessage) returns (TransactionInfo) {
        option (google.api.http) = {
      post: "/wallet/gettransactioninfobyid"
      body: "*"
      additional_bindings {
        get: "/wallet/gettransactioninfobyid"
      }
    };
    }

    rpc AccountPermissionUpdate (AccountPermissionUpdateContract) returns (TransactionExtension) {
        option (google.api.http) = {
      post: "/wallet/accountpermissionupdate"
      body: "*"
      additional_bindings {
        get: "/wallet/accountpermissionupdate"
      }
    };
    }


    rpc AddSign (TransactionSign) returns (TransactionExtension) {

    };

    rpc GetTransactionSignWeight (Transaction) returns (TransactionSignWeight) {

    };

    rpc GetTransactionApprovedList (Transaction) returns (TransactionApprovedList) {

    };

    rpc GetNodeInfo (EmptyMessage) returns (NodeInfo) {
    };

    rpc Stake (StakeContract) returns (TransactionExtension) {
        option (google.api.http) = {
      post: "/wallet/getstake"
      body: "*"
      additional_bindings {
        get: "/wallet/getstake"
      }
    };
    }

    rpc Unstake (UnstakeContract) returns (TransactionExtension) {
        option (google.api.http) = {
      post: "/wallet/unstake"
      body: "*"
      additional_bindings {
        get: "/wallet/unstake"
      }
    };
    }

    rpc ResignWitness (WitnessResignContract) returns (Transaction) {
        option (google.api.http) = {
      post: "/wallet/resignwitness"
      body: "*"
      additional_bindings {
        get: "/wallet/resignwitness"
      }
    };
    };

};


service WalletSolidity {

    rpc GetAccount (Account) returns (Account) {
        option (google.api.http) = {
      post: "/walletsolidity/getaccount"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getaccount"
      }
    };
    };
    rpc GetAccountById (Account) returns (Account) {
        option (google.api.http) = {
      post: "/walletsolidity/getaccountbyid"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getaccountbyid"
      }
    };
    };

    rpc ListWitnesses (EmptyMessage) returns (WitnessList) {
        option (google.api.http) = {
      post: "/walletsolidity/listwitnesses"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/listwitnesses"
      }
    };
    };
    rpc GetAssetIssueList (EmptyMessage) returns (AssetIssueList) {
        option (google.api.http) = {
      post: "/walletsolidity/getassetissuelist"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/getassetissuelist"
      }
    };
    }
    rpc GetPaginatedAssetIssueList (PaginatedMessage) returns (AssetIssueList) {
        option (google.api.http) = {
        post: "/walletsolidity/getpaginatedassetissuelist"
        body: "*"
        additional_bindings {
          get: "/walletsolidity/getpaginatedassetissuelist"
        }
      };
    }

    rpc GetAssetIssueById (BytesMessage) returns (AssetIssueContract) {
    }

    rpc GetNowBlock (EmptyMessage) returns (BlockExtension) {
    };

    rpc GetBlockByNum (NumberMessage) returns (BlockExtension) {
    }

    rpc GetTransactionCountByBlockNum (NumberMessage) returns (NumberMessage) {
    }

    rpc GetDelegatedResource (DelegatedResourceMessage) returns (DelegatedResourceList) {
    };

    rpc GetDelegatedResourceAccountIndex (BytesMessage) returns (DelegatedResourceAccountIndex) {
    };

    rpc GetExchangeById (BytesMessage) returns (Exchange) {
    };

    rpc ListExchanges (EmptyMessage) returns (ExchangeList) {
    };


    rpc GetTransactionById (BytesMessage) returns (Transaction) {
        option (google.api.http) = {
      post: "/walletsolidity/gettransactionbyid"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/gettransactionbyid"
      }
    };
    }
    rpc GetTransactionInfoById (BytesMessage) returns (TransactionInfo) {
        option (google.api.http) = {
      post: "/walletsolidity/gettransactioninfobyid"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/gettransactioninfobyid"
      }
    };
    }
    //Warning: do not invoke this interface provided by others.
    rpc GenerateAddress (EmptyMessage) returns (AddressPrKeyPairMessage) {
        option (google.api.http) = {
      post: "/walletsolidity/generateaddress"
      body: "*"
      additional_bindings {
        get: "/walletsolidity/generateaddress"
      }
    };
    }
};

service WalletExtension {
    rpc GetTransactionsFromThis (AccountPaginated) returns (TransactionListExtension) {
    }

    rpc GetTransactionsToThis (AccountPaginated) returns (TransactionListExtension) {
    }
};

// the api of tron's db
service Database {
    // for tapos
    rpc getBlockReference (EmptyMessage) returns (BlockReference) {

    }
    rpc GetDynamicProperties (EmptyMessage) returns (DynamicProperties) {

    }
    rpc GetNowBlock (EmptyMessage) returns (Block) {

    }
    rpc GetBlockByNum (NumberMessage) returns (Block) {

    }
};

message Return {
    enum ResponseCode {
        SUCCESS = 0;
        SIGERROR = 1; // error in signature
        CONTRACT_VALIDATE_ERROR = 2;
        CONTRACT_EXE_ERROR = 3;
        BANDWITH_ERROR = 4;
        DUP_TRANSACTION_ERROR = 5;
        TAPOS_ERROR = 6;
        TOO_BIG_TRANSACTION_ERROR = 7;
        TRANSACTION_EXPIRATION_ERROR = 8;
        SERVER_BUSY = 9;
        NO_CONNECTION = 10;
        NOT_ENOUGH_EFFECTIVE_CONNECTION = 11;
        OTHER_ERROR = 20;
    }

    bool result = 1;
    ResponseCode code = 2;
    bytes message = 3;
}

message BlockReference {
    int64 block_num = 1;
    bytes block_hash = 2;
}

// the api of tron's network such as node list.
service Network {

};

message WitnessList {
    repeated Witness witnesses = 1;
}
message ProposalList {
    repeated Proposal proposals = 1;
}
message ExchangeList {
    repeated Exchange exchanges = 1;
}
message AssetIssueList {
    repeated AssetIssueContract asset_issue = 1;
}
message BlockList {
    repeated Block block = 1;
}
message TransactionList {
    repeated Transaction transaction = 1;
}
message DelegatedResourceMessage {
    bytes from_address = 1;
    bytes to_address = 2;
}
message DelegatedResourceList {
    repeated DelegatedResource delegated_resource = 1;
}

// Gossip node list
message NodeList {
    repeated Node nodes = 1;
}

// Gossip node
message Node {
    Address address = 1;
}

// Gossip node address
message Address {
    bytes host = 1;
    int32 port = 2;
}

message EmptyMessage {
}
message NumberMessage {
    int64 num = 1;
}
message BytesMessage {
    bytes value = 1;
}
message TimeMessage {
    int64 begin_in_milliseconds = 1;
    int64 end_in_milliseconds = 2;
}
message BlockLimit {
    int64 start_num = 1;
    int64 end_num = 2;
}
message TransactionLimit {
    bytes transaction_id = 1;
    int64 limit_num = 2;
}
message AccountPaginated {
    Account account = 1;
    int64 offset = 2;
    int64 limit = 3;
}
message TimePaginatedMessage {
    TimeMessage time_message = 1;
    int64 offset = 2;
    int64 limit = 3;
}
message AccountResourceMessage {
    int64 free_bandwidth_used = 1;
    int64 free_bandwidth_limit = 2;
    int64 bandwidth_used = 3;
    int64 bandwidth_limit = 4;
    map<int64, int64> asset_bandwidth_used = 5;
    map<int64, int64> asset_bandwidth_limit = 6;
    int64 total_bandwidth_limit = 7;
    int64 total_bandwidth_weight = 8;

    int64 energy_used = 13;
    int64 energy_limit = 14;
    int64 total_energy_limit = 15;
    int64 total_energy_weight = 16;
}

message PaginatedMessage {
    int64 offset = 1;
    int64 limit = 2;
}

message EasyTransferMessage {
    bytes pass_phrase = 1;
    bytes to_address = 2;
    int64 amount = 3;
}

message EasyTransferAssetMessage {
    bytes pass_phrase = 1;
    bytes to_address = 2;
    int64 asset_id = 3;
    int64 amount = 4;
}

message EasyTransferByPrivateMessage {
    bytes private_key = 1;
    bytes to_address = 2;
    int64 amount = 3;
}

message EasyTransferAssetByPrivateMessage {
    bytes private_key = 1;
    bytes to_address = 2;
    int64 asset_id = 3;
    int64 amount = 4;
}

message EasyTransferResponse {
    Transaction transaction = 1;
    Return result = 2;
    bytes tx_id = 3; //transaction id =  sha256(transaction.rowdata)
}

message AddressPrKeyPairMessage {
    string address = 1;
    string private_key = 2;
}

message TransactionExtension {
    Transaction transaction = 1;
    bytes tx_id = 2; //transaction id =  sha256(transaction.rowdata)
    repeated bytes constant_result = 3;
    Return result = 4;
}

message BlockExtension {
    repeated TransactionExtension transactions = 1;
    BlockHeader block_header = 2;
    bytes block_id = 3;
}

message BlockListExtension {
    repeated BlockExtension blocks = 1;
}

message TransactionListExtension {
    repeated TransactionExtension transactions = 1;
}

message TransactionSignWeight {
    message Result {
        enum ResponseCode {
            ENOUGH_PERMISSION = 0;
            NOT_ENOUGH_PERMISSION = 1; // error in
            SIGNATURE_FORMAT_ERROR = 2;
            COMPUTE_ADDRESS_ERROR = 3;
            PERMISSION_ERROR = 4; //The key is not in permission
            OTHER_ERROR = 20;
        }
        ResponseCode code = 1;
        string message = 2;
    }

    Permission permission = 1;
    repeated bytes approved_list = 2;
    int64 current_weight = 3;
    Result result = 4;
    TransactionExtension transaction = 5;
}

message TransactionApprovedList {
    message Result {
        enum ResponseCode {
            SUCCESS = 0;
            SIGNATURE_FORMAT_ERROR = 1;
            COMPUTE_ADDRESS_ERROR = 2;
            OTHER_ERROR = 20;
        }
        ResponseCode code = 1;
        string message = 2;
    }

    repeated bytes approved_list = 2;
    Result result = 4;
    TransactionExtension transaction = 5;
}

message BlockRewardList {
    repeated BlockReward.Reward rewards = 1;
}