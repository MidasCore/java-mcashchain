net {
    type = mainnet
    //    type = testnet
}

storage {
    # Directory for storing persistent data
    db.version = 2,
    db.engine = "LEVELDB",
    db.sync = false,
    db.directory = "database",
    index.directory = "index",
    transHistory.switch = "on",

    # You can custom these 14 databases' configs:

    # account, account-index, asset-issue, block, block-index,
    # block_KDB, peers, properties, recent-block, trans,
    # utxo, votes, witness, witness_schedule.

    # Otherwise, db configs will remain defualt and data will be stored in
    # the path of "output-directory" or which is set by "-d" ("--output-directory").

    # Attention: name is a required field that must be set !!!
    properties = [
        //    {
        //      name = "account",
        //      path = "storage_directory_test",
        //      createIfMissing = true,
        //      paranoidChecks = true,
        //      verifyChecksums = true,
        //      compressionType = 1,        // compressed with snappy
        //      blockSize = 4096,           // 4  KB =         4 * 1024 B
        //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
        //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
        //      maxOpenFiles = 100
        //    },
        //    {
        //      name = "account-index",
        //      path = "storage_directory_test",
        //      createIfMissing = true,
        //      paranoidChecks = true,
        //      verifyChecksums = true,
        //      compressionType = 1,        // compressed with snappy
        //      blockSize = 4096,           // 4  KB =         4 * 1024 B
        //      writeBufferSize = 10485760, // 10 MB = 10 * 1024 * 1024 B
        //      cacheSize = 10485760,       // 10 MB = 10 * 1024 * 1024 B
        //      maxOpenFiles = 100
        //    },
    ]

    //dbsettings is needed when using rocksdb as the storage implement (db.version=2 and db.engine="ROCKSDB").
    //we'd strongly recommend that do not modify it unless you know every item's meaning clearly.
    dbSettings = {
        levelNumber = 7
        //compactThreads = 32
        blocksize = 64  // n * KB
        maxBytesForLevelBase = 256  // n * MB
        maxBytesForLevelMultiplier = 10
        level0FileNumCompactionTrigger = 4
        targetFileSizeBase = 256  // n * MB
        targetFileSizeMultiplier = 1
    }

    //backup settings when using rocks db as the storage implement (db.version=2 and db.engine="ROCKSDB").
    //if you want to use the backup plugin, please confirm set the db.version=2 and db.engine="ROCKSDB" above.
    backup = {
        enable = false  // indicate whether enable the backup plugin
        propPath = "prop.properties" // record which bak directory is valid
        bak1path = "bak1/database" // you must set two backup directories to prevent application halt unexpected(e.g. kill -9).
        bak2path = "bak2/database"
        frequency = 10000   // indicate backup db once every 10000 blocks processed.
    }
}

node.discovery = {
    enable = true
    persist = true
    bind.ip = ""
    external.ip = null
}

node.backup {
    port = 10001

    # my priority, each member should use different priority
    priority = 8

    # peer's ip list, can't contain mine
    members = [
        # "ip",
        # "ip"
    ]
}

node {
    # trust node for solidity node
    # trustNode = "ip:port"
    trustNode = "127.0.0.1:50051"

    # expose extension api to public or not
    walletExtensionApi = true

    listen.port = 11399

    connection.timeout = 2

    tcpNettyWorkThreadNum = 0

    udpNettyWorkThreadNum = 1

    # Number of validate sign thread, default availableProcessors / 2
    # validateSignThreadNum = 16

    connectFactor = 0.3
    activeConnectFactor = 0.1

    maxActiveNodes = 30

    maxActiveNodesWithSameIp = 10

    minParticipationRate = 15

    # check the peer data transfer ,disconnect factor
    disconnectNumberFactor = 0.4
    maxConnectNumberFactor = 0.8
    receiveTcpMinDataLength = 2048
    isOpenFullTcpDisconnect = true

    p2p {
        version = 11164576 # 11164576: mainnet;
    }

    active = [
        # Active establish connection in any case
        # Sample entries:
        # "ip:port",
        # "ip:port"
    ]

    passive = [
        # Passive accept connection in any case
        # Sample entries:
        # "ip:port",
        # "ip:port"
    ]

    fastForward = [
    ]

    http {
        fullNodePort = 8090
        solidityPort = 8091
    }

    rpc {
        port = 50051
        #solidityPort = 50061
        # Number of gRPC thread, default availableProcessors / 2
        # thread = 16

        # The maximum number of concurrent calls permitted for each incoming connection
        # maxConcurrentCallsPerConnection =

        # The HTTP/2 flow control window, default 1MB
        # flowControlWindow =

        # Connection being idle for longer than which will be gracefully terminated
        maxConnectionIdleInMillis = 60000

        # Connection lasting longer than which will be gracefully terminated
        # maxConnectionAgeInMillis =

        # The maximum message size allowed to be received on the server, default 4MB
        # maxMessageSize =

        # The maximum size of header list allowed to be received, default 8192
        # maxHeaderListSize =

        # Transactions can only be broadcast if the number of effective connections is reached.
        minEffectiveConnection = 0
    }

    # number of solidity thread in the FullNode.
    # If accessing solidity rpc and http interface timeout, could increase the number of threads,
    # The default value is the number of cpu cores of the machine.
    #solidity.threads = 8

    # Limits the maximum percentage (default 75%) of producing block interval
    # to provide sufficient time to perform other operations e.g. broadcast block
    # blockProducedTimeOut = 75

    # Limits the maximum number (default 700) of transaction from network layer
    # netMaxTrxPerSecond = 700
}


seed.node = {
    # List of the seed nodes
    # Seed nodes are stable full nodes
    # example:
    # ip.list = [
    #   "ip:port",
    #   "ip:port"
    # ]
    ip.list = [
        "10.46.121.10:11399",
        "10.46.120.11:11399",
        "10.46.122.12:11399"
    ]
}

genesis.block = {
    # Reserve balance
    assets = [
        {
            accountName = "Master"
            accountType = "Normal"
            address = "MA45tRJvijHJ5zXPveap6KMW3zkdVtWyoY"
            balance = "10000000000000000"
        },
//        {
//            accountName = "Team"
//            accountType = "Normal"
//            address = ""
//            balance = "10000000000000000"
//        },
        {
            accountName = "Foundation"
            accountType = "Normal"
            address = "MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd"
            balance = "0"
        },
//        {
//            accountName = "MasSnapshot"
//            accountType = "Normal"
//            address = ""
//            balance = "50000000000000000"
//        },
//        {
//            accountName = "Airdrop"
//            accountType = "Normal"
//            address = ""
//            balance = "15000000000000000"
//        },
        {
            accountName = "Blackhole"
            accountType = "Normal"
            address = "MAAAAAAAAAAAAAAAAAAAAAAAAAAAHF57Ay"
            balance = "0"
        }
    ]

    witnesses = [
        {
            address: MS9DB1DUb5JFSpnGpntGzCY4YXXjN9ZSyV,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-1.io",
            voteCount = 20000
        },
        {
            address: MDzbLoLveEwg4AtpeoRGmk6XCUiPAntbVi,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-2.io"
            voteCount = 20000
        },
        {
            address: MENJyVk9SMmHbBMx1i7pxVXzX4i75g26YA,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-3.io"
            voteCount = 20000
        },
        {
            address: MTyPo7A4xnuv8dfS6Wry515jF13B99pcne,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-4.io",
            voteCount = 20000
        },
        {
            address: MVofLKhnsunvgnoE2K7Mn6wyrm8Lu33D5U,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-5.io"
            voteCount = 20000
        },
        {
            address: MA6XkxovRRn51XHW1hvb2vhLXHWL2tXcC1,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-6.io"
            voteCount = 20000
        },
        {
            address: MVeUHiKDmPHBK53qdvWvvUWuamVNMvyb3d,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-7.io",
            voteCount = 20000
        },
        {
            address: MLFJdzPkrJTymVNECgG386iCKznNDL6RbK,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-8.io"
            voteCount = 20000
        },
        {
            address: MKeBLUjXUdKaFYEg87vP8Spi7gsnq6WRxX,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-9.io"
            voteCount = 20000
        },
        {
            address: MNYrSYo3Zar7xSQLPTgewJiHkpecBcWgkB,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-10.io",
            voteCount = 20000
        },
        {
            address: MM3kZUJRL55cPda1P3uGjKFza47Ze41oet,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-11.io"
            voteCount = 20000
        },
        {
            address: MKrHX8Vi1r6GRfsRkddVdL5UioTEdD9CZT,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-12.io"
            voteCount = 20000
        },
        {
            address: MCsCChTF4Tj43CoAAeuf27x9mrULW9eCtj,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-13.io",
            voteCount = 20000
        },
        {
            address: MF5aWGA7ACBe5Y8VyQWhGc7qgDfapSXnwY,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-14.io"
            voteCount = 20000
        },
        {
            address: MWREE93rajZmRbMR5BiDeLykFHd3Q1Fyi7,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-15.io"
            voteCount = 20000
        },
        {
            address: MHZUAFHcsheLQ9Fzt5TFQsoFuk1EqwtQtu,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-16.io",
            voteCount = 20000
        },
        {
            address: M8o95rfwt11EHu3xfCY1gyLvbthrgjtQGQ,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-17.io"
            voteCount = 20000
        },
        {
            address: MBioAgRCv54E6QzKdMcucm56u4VJVqx3c7,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-18.io"
            voteCount = 20000
        },
        {
            address: MFkmZXJm948hApKLqK6rUhhpoGKsSfGq77,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-19.io",
            voteCount = 20000
        },
        {
            address: MBHTL7ecnBTcJJH1uJuDGaFdhSbkJMWTey,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-20.io"
            voteCount = 20000
        },
        {
            address: MFFcmddyTjRQ9XHqvD6w12Lr1A9RUL5pZE,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-21.io"
            voteCount = 20000
        },
        {
            address: MWphTE4AU21qVFjzgcEiQGYGB5obJX94ne,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-22.io",
            voteCount = 20000
        },
        {
            address: MDcqNgbc3reoiueGtGVp3mkbPjzbv3WvXR,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-23.io"
            voteCount = 20000
        },
        {
            address: MFEmR6Y9GEkBRkgkM4AuX6PxkVrBsUtevs,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-24.io"
            voteCount = 20000
        },
        {
            address: MNC6VdQDNvo8b8eMUaboKPXFSjJxJYozc1,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-25.io",
            voteCount = 20000
        },
        {
            address: MRjw4jeEk1FP9wb2tXij53GZSwcfik3AGV,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-26.io"
            voteCount = 20000
        },
        {
            address: MN6rLoK9hMaCoBzadxQSz2SkLuBBgE74BZ,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-27.io"
            voteCount = 20000
        },
        {
            address: MQpNRgzzUmHoWa1Pd6RvsQjmcgHCwgCay9,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd,
            url = "https://midas-28.io",
            voteCount = 20000
        },
        {
            address: MJ7YDF4hvNPRQP6SmYurc1HnBQejjGXSpA,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-29.io"
            voteCount = 20000
        },
        {
            address: MJDgKYRy5FpEfhHF7qsiEgZo18ogdToxY5,
            ownerAddress: MMS5VAdvprDuDbMsLzMS96rNut7hjbu1Zd
            url = "https://midas-30.io"
            voteCount = 20000
        }
    ]

    timestamp = "1561006800000" #2019-6-20 5:00:00

    parentHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
}

// Optional.The default is empty.
// It is used when the witness account has set the witnessPermission.
// When it is not empty, the localWitnessAccountAddress represents the address of the witness account,
// and the localwitness is configured with the private key of the witnessPermissionAddress in the witness account.
// When it is empty,the localwitness is configured with the private key of the witness account.

//localWitnessAccountAddress =

localwitness = [
]

#localwitnesskeystore = [
#  "localwitnesskeystore.json"
#]

block = {
    needSyncCheck = false
    maintenanceTimeInterval = 7200000
    proposalExpireTime = 259200000 // 3 day: 259200000(ms)
}

# Transaction reference block, default is "head", configure to "solid" can avoid TaPos error
# trx.reference.block = "head" // head;solid;

# This property sets the number of milliseconds after the creation of the transaction that is expired, default value is  60000.
# trx.expiration.timeInMilliseconds = 60000

vm = {
    supportConstant = true
    minTimeRatio = 0.0
    maxTimeRatio = 5.0
    saveInternalTx = true

    # In rare cases, transactions that will be within the specified maximum execution time (default 10(ms)) are re-executed and packaged
    # longRunningTime = 10
}

committee = {
    allowCreationOfContracts = 1  //mainnet:0 (reset by committee),test:1
    allowAdaptiveEnergy = 1  //mainnet:0 (reset by committee),test:1
}

event.subscribe = {
    path = "" // absolute path of plugin
    server = "" // target server address to receive event triggers
    dbconfig = "" // dbname|username|password
    topics = [
        {
            triggerName = "block" // block trigger, the value can't be modified
            enable = false
            topic = "block" // plugin topic, the value could be modified
        },
        {
            triggerName = "transaction"
            enable = false
            topic = "transaction"
        },
        {
            triggerName = "contractevent"
            enable = true
            topic = "contractevent"
        },
        {
            triggerName = "contractlog"
            enable = true
            topic = "contractlog"
        }
    ]

    filter = {
        fromblock = "" // the value could be "", "earliest" or a specified block number as the beginning of the queried range
        toblock = "" // the value could be "", "latest" or a specified block number as end of the queried range
        contractAddress = [
            "" // contract address you want to subscribe, if it's set to "", you will receive contract logs/events with any contract address.
        ]

        contractTopic = [
            "" // contract topic you want to subscribe, if it's set to "", you will receive contract logs/events with any contract topic.
        ]
    }
}
